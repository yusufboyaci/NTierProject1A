@{
    ViewData["Title"] = "Index";
}
<div id="app">

    <div class="table-responsive">

        <table class="table table-primary table-striped table-hover table-bordered">
            <thead>
                <tr>
                    <th scope="col">Kategori Adı</th>
                    <th>İşlem</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="category in list">
                    <td>{{ category.name }}</td>
                    <td>
                        <button v-on:click="deleteCategory(category)" type="button" class="btn btn-danger btn-sm"><i class="fa-solid fa-trash"></i></button>
                        <button v-on:click="getCategory(category)" type="button" class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#exampleModal1">
                            <i class="fa-solid fa-pencil"></i>
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
        Kategori Ekle
    </button>

    <a class="btn btn-outline-info ms-5" asp-controller="Product" asp-action="Index">Ürünler</a>

    <!--Add Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Kategori Kaydet</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label class="form-label">Kategori Adı</label>
                            <input type="text" class="form-control" v-model="name" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <button type="button" class="btn btn-primary" v-on:click="saveCategory">Kaydet</button>
                </div>
            </div>
        </div>
    </div>
    <!--Update Modal -->
    <div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Kategori Güncelle</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label class="form-label">Kategori Adı</label>
                            <input type="text" class="form-control" v-model="name" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <button type="button" class="btn btn-primary" v-on:click="updateCategory({id: id, name: name})">Kaydet</button>
                    @*updateCategory({id: id, name: name}) şeklinde parametre olarak nesne vermek güzel bir yöntem *@
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    const { createApp } = Vue;
    createApp({
        data() {
            return {
                id: "",
                name: "",
                list: []
            }
        },
        methods: {
            saveCategory() {
                axios({
                    method: 'post',
                    url: '/Category/Add',
                    data: {
                        name: this.name
                    }
                }).then(response => {
                    location.reload();
                });
            },//
            getCategories() {
                axios.get('/Category/List').then(response => {
                    let array = response.data;
                    for (let item in array) {
                        this.list.push({
                            id: array[item].id,
                            name: array[item].name
                        })
                    }
                });
            },//
            deleteCategory(category) {
                axios.delete('/Category/Delete', {
                    data: {
                        id: category.id,
                        name: category.name
                    }
                }).then((res) => {
                    location.reload();
                })
            },//
            getCategory(category) {
                this.id = category.id;
                this.name = category.name;
            },//
            updateCategory(category) {
                axios.put('/Category/Update', {
                    id: category.id,
                    name: category.name
                }).then((res) => {
                    location.reload();
                })
            },//
        },
        beforeMount() {
            this.getCategories();
        },
    }).mount("#app");
</script>
